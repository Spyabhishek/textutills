{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","to","class","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","length","defaultProps","title","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","About","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06f4f787.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n           <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Textutils</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n      <div class={`form-check form-switch text-${props.mode==='light'? 'dark' : 'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n      </div>\r\n  </div>\r\n</nav>\r\n\r\n);\r\n    \r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText:  PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'set About text here'\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\n// import Alert from './Components/Alert'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase( );\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase( );\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n\r\n    const handleCopy =()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", \"success\");\r\n    }\r\n\r\n    const clear = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    \r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n           <div className=\"container\" style={{color:props.mode==='dark'? 'white' : '#042743'}}>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'? '#13466e' : 'white', color: props.mode==='dark'? 'white' : '#042743'}}id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n          </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to upperCase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>Convert to lowerCase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra spaces</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={clear}>Clear</button>\r\n\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'? 'white' : '#042743'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} charcaters </p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return  element.length!==0}).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n            \r\n\r\n          \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n        const capitalize  = (word) =>{\r\n            const lower  = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        }\r\n        return (\r\n            <div style={{height: '50px'}}>\r\n            { props.alert  && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                </div>}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"card\">\r\n  <div className=\"card-body\">\r\n        Hey there!<br/>\r\n        I'm Abhishek Kumar.<br/>\r\n        I started learning HTML for fun. As a student I also dreamt of having my own website on web.<br />\r\n        But after witnessing its capabilities, i was blown away by its potential.<br />\r\n        soon, I started learning JavaScript, a language  with no limitations.<br />\r\n        This is the project that i had done while learning React.js...\r\n  </div>\r\n</div>\r\n    )\r\n}","import './App.css';\nimport Navbar from  './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState ('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n        setAlert({\n          msg: message,\n          type: type\n        })\n        setTimeout(() =>\n         {\n            setAlert(null)\n        },1500 )\n  }\n\n  const toggleMode = ()=>{\n    if(mode=== 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled!\", \"success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"Home\" aboutText=\"About\" mode={mode} toggleMode={toggleMode}/> \n    <Alert alert = {alert} />\n    <div className=\"container my-3\" >\n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n            <Route exact path=\"/\">\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n            </Route>\n        </Switch>\n    </div>\n    </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}